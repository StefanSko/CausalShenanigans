name: Generate Blog Posts and Deploy

on:
  workflow_dispatch:  # Enables manual triggering
    inputs:
      notebook_path:
        description: 'Path to specific notebook (optional)'
        required: false
        type: string
  push:
    paths:
      - 'final/*.ipynb'
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  convert-notebook:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbconvert beautifulsoup4 nbformat

    - name: Get changed files
      id: changed-files
      run: |
        echo "files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^final/.*\.ipynb$' | tr '\n' ' ')" >> $GITHUB_OUTPUT

    - name: Convert notebooks to blog posts
      run: |
        for notebook in ${{ steps.changed-files.outputs.files }}; do
          echo "Processing $notebook"
          python blog_generator.py "$notebook"
        done

    - name: Commit and push if changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Pull latest changes with rebase strategy
        git pull --rebase origin main
        
        if git diff --quiet docs/; then
          echo "No changes to commit"
          exit 0
        fi
        
        git add docs/
        git commit -m "Update blog with new notebook conversions"
        
        # Push with force-with-lease for safety
        git push --force-with-lease origin HEAD:main

  # Deploy to GitHub Pages
  deploy:
    needs: convert-notebook
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4